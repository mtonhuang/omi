{"version":3,"sources":["../src/vnode.js","../src/h.js","../src/util.js","../src/vdom/index.js","../src/dom/index.js","../src/vdom/diff.js","../src/tick.js","../src/observe.js","../src/define.js","../src/we-element.js","../src/render.js","../src/clone-element.js","../src/get-host.js","../src/rpx.js","../src/class.js","../src/o.js","../src/options.js","../src/proxy.js","../src/model-view.js","../src/omi.js"],"names":["VNode","h","nodeName","attributes","lastSimple","child","simple","i","children","arguments","length","stack","push","pop","undefined","String","p","key","options","vnode","cssToDom","css","node","document","createElement","textContent","npn","str","replace","$","$1","toUpperCase","extend","obj","props","applyRef","ref","value","current","isArray","Object","prototype","toString","call","nProps","result","keys","forEach","getUse","data","paths","path","index","isPath","getTargetByPath","tempPath","tempVal","args","apply","origin","arr","split","len","hyphenate","hyphenateRE","toLowerCase","isSameNodeType","splitText","mapping","hydrating","_componentConstructor","isNamedNode","createNode","removeNode","name","isSvg","className","old","style","cssText","IS_NON_DIMENSIONAL","test","useCapture","substring","addEventListener","touchStart","touchEnd","eventProxy","removeEventListener","e","pureRemoveAttribute","removeAttribute","ns","removeAttributeNS","pureSetAttribute","setAttribute","this","___touchX","_listeners","type","pageX","___touchY","touches","pageY","Math","___scrollTop","body","scrollTop","abs","changedTouches","dispatchEvent","CustomEvent","detail","isSvgMode","parent","ownerSVGElement","dom","querySelectorAll","ATTR_KEY","styles","s","innerDiffNode","removeChild","firstChild","insertBefore","appendChild","item","ele","idiff","context","mountAll","componentRoot","ret","one","recollectNodeTree","parentNode","out","nodeValue","createTextNode","replaceChild","vnodeName","vchildren","fc","a","nextSibling","constructor","is","noSlot","dangerouslySetInnerHTML","diffAttributes","min","childrenLen","vlen","j","keyedLen","originalChildren","keyed","vchild","_child","_component","__key","trim","isHydrating","c","f","unmountOnly","removeChildren","oldClone","assign","receiveProps","setAccessor","isWeElement","update","attrs","console","__hasChildren","store","callbacks","fn","scope","tick","nextItem","nextTick","nextTickCallback","target","observe","JSONPatcherProxy","JSONProxy","clearTimeout","_willUpdate","timeout","setTimeout","fireTick","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","ctor","customElements","define","use","updatePath","getPath","getUpdatePath","_WeElement","Element","_len","Array","render","beforeRender","_useId","useCss","_preCss","shadowRoot","querySelector","useData","_this2","updater","newValue","_useMap","id","effect","installed","_isInstalled","WeElement","dataToPath","_objToPath","_arrayToPath","ARRAYTYPE","_inherits$1","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","observed","HTMLElement","op","instances","patch","extendStoreUpate","v","patchs","fixPath","kv","diff","matchGlobalData","globalData","_this","needUpdate","_updatePath","updateAll","initUse","onChange","diffResult","indexOf","keyA","keyB","includePath","pathA","pathB","next","substr","mpPath","isNaN","Number","getArrayPatch","fixArrPath","pure","cloneElement","host","rpx","b","_inherits$2","hasOwn","argType","arg","classes","classNames","inner","extractClass","_Array$prototype$slic","slice","class","unshift","o","JSON","stringify","htm","t","r","n","root","global","window","Reflect","hasOwnProperty","BuiltInHTMLElement","construct","Promise","resolve","then","bind","diffLevel","deepClone","escapePathComponent","pathComponents","parentAndPath","parenthoodMap","get","parentPath","newValueOriginalObject","revokableInstance","inherited","proxifiedObjectsMap","has","set","operation","destinationPropKey","oldValue","delete","disableTrapsForProxy","warn","reflectionResult","revokableProxyInstance","defaultCallback","resume","patches","userCallback","pause","isObserving","showDetachedWarning","cachedProxy","receiver","deleteProperty","deleteTrap","Proxy","revocable","revocableInstance","trapsInstance","traps","originalObject","_proxifyObjectTreeRecursively","proxifyObjectTree","isProxifyingTreeNow","proxifiedObject","targetObject","message","propKey","record","callback","generate","isRecording","revoke","el","disableTraps","elementId","connectedCallback","attrsToProps","beforeInstall","install","afterInstall","attachShadow","mode","proxyUpdate","rendered","_host","_customStyleElement","disconnectedCallback","splice","beforeUpdate","_customStyleContent","_HTMLElement","val","getAttribute","normalizedNodeName","Boolean","parse","defaultProps","fire","ModelView","vm","u","Map","html","omi","tag","Component","defineElement","elements","getHost","createRef","Omi","version"],"mappings":"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","file":"omi.js","sourcesContent":["/** Virtual DOM Node */\nexport function VNode() {}\n","import { VNode } from './vnode'\nimport options from './options'\n\nconst stack = []\n\nexport function h(nodeName, attributes) {\n  let children = [],\n    lastSimple,\n    child,\n    simple,\n    i\n  for (i = arguments.length; i-- > 2; ) {\n    stack.push(arguments[i])\n  }\n  if (attributes && attributes.children != null) {\n    if (!stack.length) stack.push(attributes.children)\n    delete attributes.children\n  }\n  while (stack.length) {\n    if ((child = stack.pop()) && child.pop !== undefined) {\n      for (i = child.length; i--; ) stack.push(child[i])\n    } else {\n      if (typeof child === 'boolean') child = null\n\n      if ((simple = typeof nodeName !== 'function')) {\n        if (child == null) child = ''\n        else if (typeof child === 'number') child = String(child)\n        else if (typeof child !== 'string') simple = false\n      }\n\n      if (simple && lastSimple) {\n        children[children.length - 1] += child\n      } else if (children.length === 0) {\n        children = [child]\n      } else {\n        children.push(child)\n      }\n\n      lastSimple = simple\n    }\n  }\n\n  let p = new VNode()\n  p.nodeName = nodeName\n  p.children = children\n  p.attributes = attributes == null ? undefined : attributes\n  p.key = attributes == null ? undefined : attributes.key\n\n  // if a \"vnode hook\" is defined, pass every created VNode to it\n  if (options.vnode !== undefined) options.vnode(p)\n\n  return p\n}\n","/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * This shim allows elements written in, or compiled to, ES5 to work on native\n * implementations of Custom Elements v1. It sets new.target to the value of\n * this.constructor so that the native HTMLElement constructor can access the\n * current under-construction element's definition.\n */\n; (function () {\n  if (\n    // No Reflect, no classes, no need for shim because native custom elements\n    // require ES2015 classes or Reflect.\n    window.Reflect === undefined ||\n    window.customElements === undefined ||\n    // The webcomponentsjs custom elements polyfill doesn't require\n    // ES2015-compatible construction (`super()` or `Reflect.construct`).\n    window.customElements.hasOwnProperty('polyfillWrapFlushCallback')\n  ) {\n    return\n  }\n  const BuiltInHTMLElement = HTMLElement\n  window.HTMLElement = function HTMLElement() {\n    return Reflect.construct(BuiltInHTMLElement, [], this.constructor)\n  }\n  HTMLElement.prototype = BuiltInHTMLElement.prototype\n  HTMLElement.prototype.constructor = HTMLElement\n  Object.setPrototypeOf(HTMLElement, BuiltInHTMLElement)\n})()\n\nexport function cssToDom(css) {\n  const node = document.createElement('style')\n  node.textContent = css\n  return node\n}\n\nexport function npn(str) {\n  return str.replace(/-(\\w)/g, ($, $1) => {\n    return $1.toUpperCase()\n  })\n}\n\nexport function extend(obj, props) {\n  for (let i in props) obj[i] = props[i]\n  return obj\n}\n\n/** Invoke or update a ref, depending on whether it is a function or object ref.\n *  @param {object|function} [ref=null]\n *  @param {any} [value]\n */\nexport function applyRef(ref, value) {\n  if (ref != null) {\n    if (typeof ref == 'function') ref(value)\n    else ref.current = value\n  }\n}\n\n/**\n * Call a function asynchronously, as soon as possible. Makes\n * use of HTML Promise to schedule the callback if available,\n * otherwise falling back to `setTimeout` (mainly for IE<11).\n * @type {(callback: function) => void}\n */\nexport const defer =\n  typeof Promise == 'function'\n    ? Promise.resolve().then.bind(Promise.resolve())\n    : setTimeout\n\nexport function isArray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]'\n}\n\nexport function nProps(props) {\n  if (!props || isArray(props)) return {}\n  const result = {}\n  Object.keys(props).forEach(key => {\n    result[key] = props[key].value\n  })\n  return result\n}\n\nexport function getUse(data, paths) {\n  const obj = []\n  paths.forEach((path, index) => {\n    const isPath = typeof path === 'string'\n    if (isPath) {\n      obj[index] = getTargetByPath(data, path)\n    } else {\n      const key = Object.keys(path)[0]\n      const value = path[key]\n      if (typeof value === 'string') {\n        obj[index] = getTargetByPath(data, value)\n      } else {\n        const tempPath = value[0]\n        if (typeof tempPath === 'string') {\n          const tempVal = getTargetByPath(data, tempPath)\n          obj[index] = value[1] ? value[1](tempVal) : tempVal\n        } else {\n          const args = []\n          tempPath.forEach(path =>{\n            args.push(getTargetByPath(data, path))\n          })\n          obj[index] = value[1].apply(null, args)\n        }\n      }\n      obj[key] = obj[index]\n    }\n  })\n  return obj\n}\n\nexport function getTargetByPath(origin, path) {\n  const arr = path.replace(/]/g, '').replace(/\\[/g, '.').split('.')\n  let current = origin\n  for (let i = 0, len = arr.length; i < len; i++) {\n    current = current[arr[i]]\n  }\n  return current\n}\n\nconst hyphenateRE = /\\B([A-Z])/g\nexport function hyphenate(str) {\n  return str.replace(hyphenateRE, '-$1').toLowerCase()\n}","import { extend } from '../util'\nimport options from '../options'\n/**\n * Check if two nodes are equivalent.\n *\n * @param {Node} node\t\t\tDOM Node to compare\n * @param {VNode} vnode\t\t\tVirtual DOM node to compare\n * @param {boolean} [hydrating=false]\tIf true, ignores component constructors when comparing.\n * @private\n */\nexport function isSameNodeType(node, vnode, hydrating) {\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    return node.splitText !== undefined\n  }\n  if (typeof vnode.nodeName === 'string') {\n    return !node._componentConstructor && isNamedNode(node, vnode.nodeName)\n  } else if  (typeof vnode.nodeName === 'function'){\n    return options.mapping[node.nodeName.toLowerCase()] === vnode.nodeName\n  }\n  return hydrating || node._componentConstructor === vnode.nodeName\n}\n\n/**\n * Check if an Element has a given nodeName, case-insensitively.\n *\n * @param {Element} node\tA DOM Element to inspect the name of.\n * @param {String} nodeName\tUnnormalized name to compare against.\n */\nexport function isNamedNode(node, nodeName) {\n  return (\n    node.normalizedNodeName === nodeName ||\n    node.nodeName.toLowerCase() === nodeName.toLowerCase()\n  )\n}\n\n/**\n * Reconstruct Component-style `props` from a VNode.\n * Ensures default/fallback values from `defaultProps`:\n * Own-properties of `defaultProps` not present in `vnode.attributes` are added.\n *\n * @param {VNode} vnode\n * @returns {Object} props\n */\nexport function getNodeProps(vnode) {\n  let props = extend({}, vnode.attributes)\n  props.children = vnode.children\n\n  let defaultProps = vnode.nodeName.defaultProps\n  if (defaultProps !== undefined) {\n    for (let i in defaultProps) {\n      if (props[i] === undefined) {\n        props[i] = defaultProps[i]\n      }\n    }\n  }\n\n  return props\n}\n","import { IS_NON_DIMENSIONAL } from '../constants'\nimport { applyRef } from '../util'\nimport options from '../options'\n\n/**\n * Create an element with the given nodeName.\n * @param {string} nodeName The DOM node to create\n * @param {boolean} [isSvg=false] If `true`, creates an element within the SVG\n *  namespace.\n * @returns {Element} The created DOM node\n */\nexport function createNode(nodeName, isSvg) {\n  /** @type {Element} */\n  let node = isSvg\n    ? document.createElementNS('http://www.w3.org/2000/svg', nodeName)\n    : document.createElement(nodeName)\n  node.normalizedNodeName = nodeName\n  return node\n}\n\n/**\n * Remove a child node from its parent if attached.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n  let parentNode = node.parentNode\n  if (parentNode) parentNode.removeChild(node)\n}\n\n/**\n * Set a named attribute on the given Node, with special behavior for some names\n * and event handlers. If `value` is `null`, the attribute/handler will be\n * removed.\n * @param {Element} node An element to mutate\n * @param {string} name The name/key to set, such as an event or attribute name\n * @param {*} old The last value that was set for this name/node pair\n * @param {*} value An attribute value, such as a function to be used as an\n *  event handler\n * @param {boolean} isSvg Are we currently diffing inside an svg?\n * @private\n */\nexport function setAccessor(node, name, old, value, isSvg) {\n  if (name === 'className') name = 'class'\n\n  if (name === 'key') {\n    // ignore\n  } else if (name === 'ref') {\n    applyRef(old, null)\n    applyRef(value, node)\n  } else if (name === 'class' && !isSvg) {\n    node.className = value || ''\n  } else if (name === 'style') {\n    if (!value || typeof value === 'string' || typeof old === 'string') {\n      node.style.cssText = value || ''\n    }\n    if (value && typeof value === 'object') {\n      if (typeof old !== 'string') {\n        for (let i in old) if (!(i in value)) node.style[i] = ''\n      }\n      for (let i in value) {\n        node.style[i] =\n          typeof value[i] === 'number' && IS_NON_DIMENSIONAL.test(i) === false\n            ? value[i] + 'px'\n            : value[i]\n      }\n    }\n  } else if (name === 'dangerouslySetInnerHTML') {\n    if (value) node.innerHTML = value.__html || ''\n  } else if (name[0] == 'o' && name[1] == 'n') {\n    let useCapture = name !== (name = name.replace(/Capture$/, ''))\n    name = name.toLowerCase().substring(2)\n    if (value) {\n      if (!old) {\n        node.addEventListener(name, eventProxy, useCapture)\n        if (name == 'tap') {\n          node.addEventListener('touchstart', touchStart, useCapture)\n          node.addEventListener('touchend', touchEnd, useCapture)\n        }\n      }\n    } else {\n      node.removeEventListener(name, eventProxy, useCapture)\n      if (name == 'tap') {\n        node.removeEventListener('touchstart', touchStart, useCapture)\n        node.removeEventListener('touchend', touchEnd, useCapture)\n      }\n    }\n    ;(node._listeners || (node._listeners = {}))[name] = value\n  } else if (name !== 'list' && name !== 'type' && name !== 'css' && !isSvg && name in node && value !== '') { //value !== '' fix for selected, disabled, checked with pure element\n    // Attempt to set a DOM property to the given value.\n    // IE & FF throw for certain property-value combinations.\n    try {\n      node[name] = value == null ? '' : value\n    } catch (e) {}\n    if ((value == null || value === false) && name != 'spellcheck')\n      node.pureRemoveAttribute ? node.pureRemoveAttribute(name) :  node.removeAttribute(name)\n  } else {\n    let ns = isSvg && name !== (name = name.replace(/^xlink:?/, ''))\n    // spellcheck is treated differently than all other boolean values and\n    // should not be removed when the value is `false`. See:\n    // https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-spellcheck\n    if (value == null || value === false) {\n      if (ns)\n        node.removeAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          name.toLowerCase()\n        )\n      else node.pureRemoveAttribute ? node.pureRemoveAttribute(name) :  node.removeAttribute(name)\n    } else if (typeof value !== 'function') {\n      if (ns) {\n        node.setAttributeNS(\n          'http://www.w3.org/1999/xlink',\n          name.toLowerCase(),\n          value\n        )\n      } else {\n        node.pureSetAttribute ? node.pureSetAttribute(name, value) : node.setAttribute(name, value)\n      }\n    }\n  }\n}\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n  return this._listeners[e.type]((options.event && options.event(e)) || e)\n}\n\nfunction touchStart(e) {\n  this.___touchX = e.touches[0].pageX\n  this.___touchY = e.touches[0].pageY\n  this.___scrollTop = document.body.scrollTop\n}\n\nfunction touchEnd(e) {\n  if (\n    Math.abs(e.changedTouches[0].pageX - this.___touchX) < 30 &&\n    Math.abs(e.changedTouches[0].pageY - this.___touchY) < 30 &&\n    Math.abs(document.body.scrollTop - this.___scrollTop) < 30\n  ) {\n    this.dispatchEvent(new CustomEvent('tap', { detail: e }))\n  }\n}\n","import { ATTR_KEY } from '../constants'\nimport { isSameNodeType, isNamedNode } from './index'\nimport { createNode, setAccessor } from '../dom/index'\nimport { npn, isArray } from '../util'\nimport { removeNode } from '../dom/index'\nimport options from '../options'\n\n/** Queue of components that have been mounted and are awaiting componentDidMount */\nexport const mounts = []\n\n/** Diff recursion count, used to track the end of the diff cycle. */\nexport let diffLevel = 0\n\n/** Global flag indicating if the diff is currently within an SVG */\nlet isSvgMode = false\n\n/** Global flag indicating if the diff is performing hydration */\nlet hydrating = false\n\n/** Apply differences in a given vnode (and it's deep children) to a real DOM Node.\n *\t@param {Element} [dom=null]\t\tA DOM node to mutate into the shape of the `vnode`\n *\t@param {VNode} vnode\t\t\tA VNode (with descendants forming a tree) representing the desired DOM structure\n *\t@returns {Element} dom\t\t\tThe created/mutated element\n *\t@private\n */\nexport function diff(dom, vnode, context, mountAll, parent, componentRoot) {\n  // diffLevel having been 0 here indicates initial entry into the diff (not a subdiff)\n  let ret\n  if (!diffLevel++) {\n    // when first starting the diff, check if we're diffing an SVG or within an SVG\n    isSvgMode = parent != null && parent.ownerSVGElement !== undefined\n\n    // hydration is indicated by the existing element to be diffed not having a prop cache\n    hydrating = dom != null && !(ATTR_KEY in dom)\n  }\n  if (isArray(vnode)) {\n\t\tif (parent) {\n\t\t\tconst styles = parent.querySelectorAll('style')\n\t\t\tstyles.forEach(s => {\n\t\t\t\tparent.removeChild(s)\n\t\t\t})\n      innerDiffNode(parent, vnode)\n      \n      for (let i = styles.length - 1; i >= 0; i--) {\n        parent.firstChild ? parent.insertBefore(styles[i], parent.firstChild) : parent.appendChild(style[i])\n      }\n\t\t} else {\n\n\t\t\tret = []\n\t\t\tvnode.forEach((item, index) => {\n\t\t\t\tlet ele = idiff(index === 0 ? dom : null, item, context, mountAll, componentRoot)\n\t\t\t\tret.push(ele)\n\t\t\t\tparent && parent.appendChild(ele)\n\t\t\t})\n\t\t}\n  } else {\n    if (isArray(dom)) {\n\t\t\tdom.forEach((one,index)=>{\n\t\t\t\tif(index === 0){\n\t\t\t\t\tret = idiff(one, vnode, context, mountAll, componentRoot)\n\t\t\t\t}else{\n\t\t\t\t\trecollectNodeTree(one, false)\n\t\t\t\t}\n\t\t\t})\n    } else {\n      ret = idiff(dom, vnode, context, mountAll, componentRoot)\n    }\n    // append the element if its a new parent\n    if (parent && ret.parentNode !== parent) parent.appendChild(ret)\n  }\n\n  // diffLevel being reduced to 0 means we're exiting the diff\n  if (!--diffLevel) {\n    hydrating = false\n    // invoke queued componentDidMount lifecycle methods\n  }\n\n  return ret\n}\n\n/** Internals of `diff()`, separated to allow bypassing diffLevel / mount flushing. */\nfunction idiff(dom, vnode, context, mountAll, componentRoot) {\n  if (dom && vnode && dom.props) {\n    dom.props.children = vnode.children\n  }\n  let out = dom,\n    prevSvgMode = isSvgMode\n\n  // empty values (null, undefined, booleans) render as empty Text nodes\n  if (vnode == null || typeof vnode === 'boolean') vnode = ''\n\n  // Fast case: Strings & Numbers create/update Text nodes.\n  if (typeof vnode === 'string' || typeof vnode === 'number') {\n    // update if it's already a Text node:\n    if (\n      dom &&\n      dom.splitText !== undefined &&\n      dom.parentNode &&\n      (!dom._component || componentRoot)\n    ) {\n      /* istanbul ignore if */ /* Browser quirk that can't be covered: https://github.com/developit/preact/commit/fd4f21f5c45dfd75151bd27b4c217d8003aa5eb9 */\n      if (dom.nodeValue != vnode) {\n        dom.nodeValue = vnode\n      }\n    } else {\n      // it wasn't a Text node: replace it with one and recycle the old Element\n      out = document.createTextNode(vnode)\n      if (dom) {\n        if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n        recollectNodeTree(dom, true)\n      }\n    }\n\n    out[ATTR_KEY] = true\n\n    return out\n  }\n\n  // If the VNode represents a Component, perform a component diff:\n  let vnodeName = vnode.nodeName\n  if (typeof vnodeName === 'function') {\n    for(let key in options.mapping){\n      if(options.mapping[key] === vnodeName){\n        vnodeName = key\n        vnode.nodeName = key\n        break\n      }\n    }\n  }\n  // Tracks entering and exiting SVG namespace when descending through the tree.\n  isSvgMode =\n    vnodeName === 'svg'\n      ? true\n      : vnodeName === 'foreignObject'\n        ? false\n        : isSvgMode\n\n  // If there's no existing element or it's the wrong type, create a new one:\n  vnodeName = String(vnodeName)\n  if (!dom || !isNamedNode(dom, vnodeName)) {\n    out = createNode(vnodeName, isSvgMode)\n\n    if (dom) {\n      // move children into the replacement node\n      while (dom.firstChild) out.appendChild(dom.firstChild)\n\n      // if the previous Element was mounted into the DOM, replace it inline\n      if (dom.parentNode) dom.parentNode.replaceChild(out, dom)\n\n      // recycle the old element (skips non-Element node types)\n      recollectNodeTree(dom, true)\n    }\n  }\n\n  let fc = out.firstChild,\n    props = out[ATTR_KEY],\n    vchildren = vnode.children\n\n  if (props == null) {\n    props = out[ATTR_KEY] = {}\n    for (let a = out.attributes, i = a.length; i--; )\n      props[a[i].name] = a[i].value\n  }\n\n  // Optimization: fast-path for elements containing a single TextNode:\n  if (\n    !hydrating &&\n    vchildren &&\n    vchildren.length === 1 &&\n    typeof vchildren[0] === 'string' &&\n    fc != null &&\n    fc.splitText !== undefined &&\n    fc.nextSibling == null\n  ) {\n    if (fc.nodeValue != vchildren[0]) {\n      fc.nodeValue = vchildren[0]\n    }\n  }\n  // otherwise, if there are existing or new children, diff them:\n  else if ((vchildren && vchildren.length) || fc != null) {\n    if (!(out.constructor.is == 'WeElement' && out.constructor.noSlot)) {\n      innerDiffNode(\n        out,\n        vchildren,\n        context,\n        mountAll,\n        hydrating || props.dangerouslySetInnerHTML != null\n      )\n    }\n  }\n\n  // Apply attributes/props from VNode to the DOM Element:\n  diffAttributes(out, vnode.attributes, props)\n  if (out.props) {\n    out.props.children = vnode.children\n  }\n  // restore previous SVG mode: (in case we're exiting an SVG namespace)\n  isSvgMode = prevSvgMode\n\n  return out\n}\n\n/** Apply child and attribute changes between a VNode and a DOM Node to the DOM.\n *\t@param {Element} dom\t\t\tElement whose children should be compared & mutated\n *\t@param {Array} vchildren\t\tArray of VNodes to compare to `dom.childNodes`\n *\t@param {Object} context\t\t\tImplicitly descendant context object (from most recent `getChildContext()`)\n *\t@param {Boolean} mountAll\n *\t@param {Boolean} isHydrating\tIf `true`, consumes externally created elements similar to hydration\n */\nfunction innerDiffNode(dom, vchildren, context, mountAll, isHydrating) {\n  let originalChildren = dom.childNodes,\n    children = [],\n    keyed = {},\n    keyedLen = 0,\n    min = 0,\n    len = originalChildren.length,\n    childrenLen = 0,\n    vlen = vchildren ? vchildren.length : 0,\n    j,\n    c,\n    f,\n    vchild,\n    child\n\n  // Build up a map of keyed children and an Array of unkeyed children:\n  if (len !== 0) {\n    for (let i = 0; i < len; i++) {\n      let child = originalChildren[i],\n        props = child[ATTR_KEY],\n        key =\n          vlen && props\n            ? child._component\n              ? child._component.__key\n              : props.key\n            : null\n      if (key != null) {\n        keyedLen++\n        keyed[key] = child\n      } else if (\n        props ||\n        (child.splitText !== undefined\n          ? isHydrating\n            ? child.nodeValue.trim()\n            : true\n          : isHydrating)\n      ) {\n        children[childrenLen++] = child\n      }\n    }\n  }\n\n  if (vlen !== 0) {\n    for (let i = 0; i < vlen; i++) {\n      vchild = vchildren[i]\n      child = null\n\n      // attempt to find a node based on key matching\n      let key = vchild.key\n      if (key != null) {\n        if (keyedLen && keyed[key] !== undefined) {\n          child = keyed[key]\n          keyed[key] = undefined\n          keyedLen--\n        }\n      }\n      // attempt to pluck a node of the same type from the existing children\n      else if (!child && min < childrenLen) {\n        for (j = min; j < childrenLen; j++) {\n          if (\n            children[j] !== undefined &&\n            isSameNodeType((c = children[j]), vchild, isHydrating)\n          ) {\n            child = c\n            children[j] = undefined\n            if (j === childrenLen - 1) childrenLen--\n            if (j === min) min++\n            break\n          }\n        }\n      }\n\n      // morph the matched/found/created DOM child to match vchild (deep)\n      child = idiff(child, vchild, context, mountAll)\n\n      f = originalChildren[i]\n      if (child && child !== dom && child !== f) {\n        if (f == null) {\n          dom.appendChild(child)\n        } else if (child === f.nextSibling) {\n          removeNode(f)\n        } else {\n          dom.insertBefore(child, f)\n        }\n      }\n    }\n  }\n\n  // remove unused keyed children:\n  if (keyedLen) {\n    for (let i in keyed)\n      if (keyed[i] !== undefined) recollectNodeTree(keyed[i], false)\n  }\n\n  // remove orphaned unkeyed children:\n  while (min <= childrenLen) {\n    if ((child = children[childrenLen--]) !== undefined)\n      recollectNodeTree(child, false)\n  }\n}\n\n/** Recursively recycle (or just unmount) a node and its descendants.\n *\t@param {Node} node\t\t\t\t\t\tDOM node to start unmount/removal from\n *\t@param {Boolean} [unmountOnly=false]\tIf `true`, only triggers unmount lifecycle, skips removal\n */\nexport function recollectNodeTree(node, unmountOnly) {\n  // If the node's VNode had a ref function, invoke it with null here.\n  // (this is part of the React spec, and smart for unsetting references)\n  if (node[ATTR_KEY] != null && node[ATTR_KEY].ref) {\n    if (typeof node[ATTR_KEY].ref === 'function') {\n      node[ATTR_KEY].ref(null)\n    } else if (node[ATTR_KEY].ref.current) {\n      node[ATTR_KEY].ref.current = null\n    }\n  }\n\n  if (unmountOnly === false || node[ATTR_KEY] == null) {\n    removeNode(node)\n  }\n\n  removeChildren(node)\n}\n\n/** Recollect/unmount all children.\n *\t- we use .lastChild here because it causes less reflow than .firstChild\n *\t- it's also cheaper than accessing the .childNodes Live NodeList\n */\nexport function removeChildren(node) {\n  node = node.lastChild\n  while (node) {\n    let next = node.previousSibling\n    recollectNodeTree(node, true)\n    node = next\n  }\n}\n\n/** Apply differences in attributes from a VNode to the given DOM Element.\n *\t@param {Element} dom\t\tElement with attributes to diff `attrs` against\n *\t@param {Object} attrs\t\tThe desired end-state key-value attribute pairs\n *\t@param {Object} old\t\t\tCurrent/previous attributes (from previous VNode or element's prop cache)\n */\nfunction diffAttributes(dom, attrs, old) {\n  let name\n  let update = false\n  let isWeElement = dom.update\n  let oldClone\n  if (dom.receiveProps) {\n    oldClone = Object.assign({}, old)\n  }\n  // remove attributes no longer present on the vnode by setting them to undefined\n  for (name in old) {\n    if (!(attrs && attrs[name] != null) && old[name] != null) {\n      setAccessor(dom, name, old[name], (old[name] = undefined), isSvgMode)\n      if (isWeElement) {\n        delete dom.props[name]\n        update = true\n      }\n    }\n  }\n\n  // add new & update changed attributes\n  for (name in attrs) {\n    if (isWeElement && typeof attrs[name] === 'object' && name !== 'ref') {\n      if (name === 'style') {\n        setAccessor(dom, name, old[name], (old[name] = attrs[name]), isSvgMode)\n      }\n      if (dom.receiveProps) {\n        try {\n          old[name] = JSON.parse(JSON.stringify(attrs[name]))\n        } catch (e) {\n          console.warn(\n            'When using receiveProps, you cannot pass prop of cyclic dependencies down.'\n          )\n        }\n      }\n      dom.props[npn(name)] = attrs[name]\n      update = true\n    } else if (\n      name !== 'children' &&\n      name !== 'innerHTML' &&\n      (!(name in old) ||\n        attrs[name] !==\n          (name === 'value' || name === 'checked' ? dom[name] : old[name]))\n    ) {\n      setAccessor(dom, name, old[name], (old[name] = attrs[name]), isSvgMode)\n      if (isWeElement) {\n        dom.props[npn(name)] = attrs[name]\n        update = true\n      }\n    }\n  }\n\n  if (isWeElement && dom.parentNode) {\n\t\t//__hasChildren is not accuracy when it was empty at first, so add dom.children.length > 0 condition\n    if (update || dom.__hasChildren || dom.children.length > 0 || (dom.store && !dom.store.data)) {\n      if (dom.receiveProps(dom.props, dom.data, oldClone) !== false) {\n        dom.update()\n      }\n    }\n  }\n}\n","const callbacks = []\nconst nextTickCallback = []\n\nexport function tick(fn, scope) {\n  callbacks.push({ fn, scope })\n}\n\nexport function fireTick() {\n  callbacks.forEach(item => {\n    item.fn.call(item.scope)\n  })\n\n  nextTickCallback.forEach(nextItem => {\n    nextItem.fn.call(nextItem.scope)\n  })\n  nextTickCallback.length = 0\n}\n\nexport function nextTick(fn, scope) {\n  nextTickCallback.push({ fn, scope })\n}\n","import JSONProxy from './proxy'\nimport { fireTick } from './tick'\n\nexport function observe(target) {\n  target.observe = true\n}\n\nexport function proxyUpdate(ele) {\n  let timeout = null\n  ele.data = new JSONProxy(ele.data).observe(false, () => {\n    if (ele._willUpdate) {\n      return\n    }\n    if (ele.constructor.mergeUpdate) {\n      clearTimeout(timeout)\n\n      timeout = setTimeout(() => {\n        ele.update()\n        fireTick()\n      }, 0)\n    } else {\n      ele.update()\n      fireTick()\n    }\n  })\n}","import WeElement from './we-element'\nimport { cssToDom } from './util'\nimport options from './options'\n\nconst OBJECTTYPE = '[object Object]'\nconst ARRAYTYPE = '[object Array]'\n\nexport function define(name, ctor) {\n  if (ctor.is === 'WeElement') {\n    if(options.mapping[name]){\n      // if(options.mapping[name] === ctor){\n      //   console.warn(`You redefine custom elements named [${name}], redundant JS files may be referenced.`)\n      // } else {\n      //   console.warn(`This custom elements name [${name}] has already been used, please rename it.`)\n      // }\n      return\n    }\n    customElements.define(name, ctor)\n    options.mapping[name] = ctor\n    if (ctor.use) {\n      ctor.updatePath = getPath(ctor.use)\n    } else if (ctor.data) { //Compatible with older versions\n      ctor.updatePath = getUpdatePath(ctor.data)\n    }\n  } else {\n    class Element extends WeElement {\n      _useId = 0\n\n      _useMap = {}\n\n      _preCss = null\n\n      render(props, data) {\n        return ctor.call(this, props, data)\n      }\n\n      beforeRender() {\n        this._useId = 0\n      }\n\n      useCss(css) {\n        if (css === this._preCss) {\n          return\n        }\n        this._preCss = css\n        const style = this.shadowRoot.querySelector('style')\n        style && this.shadowRoot.removeChild(style)\n        this.shadowRoot.appendChild(cssToDom(css))\n      }\n\n      useData(data) {\n        return this.use({ data: data })\n      }\n\n      use(option) {\n        this._useId++\n        const updater = newValue => {\n          const item = this._useMap[updater.id]\n\n          item.data = newValue\n\n          this.update()\n          item.effect && item.effect()\n        }\n\n        updater.id = this._useId\n        if (!this._isInstalled) {\n          this._useMap[this._useId] = option\n          return [option.data, updater]\n        }\n\n        return [this._useMap[this._useId].data, updater]\n      }\n\n      installed() {\n        this._isInstalled = true\n      }\n    }\n    customElements.define(name, Element)\n  }\n}\n\nexport function getPath(obj) {\n  if (Object.prototype.toString.call(obj) === '[object Array]') {\n    const result = {}\n    obj.forEach(item => {\n      if (typeof item === 'string') {\n        result[item] = true\n      } else {\n        const tempPath = item[Object.keys(item)[0]]\n        if (typeof tempPath === 'string') {\n          result[tempPath] = true\n        } else {\n          if(typeof tempPath[0] === 'string'){\n            result[tempPath[0]] = true\n          }else{\n            tempPath[0].forEach(path => result[path] = true)\n          }\n        }\n      }\n    })\n    return result\n  } else {\n    return getUpdatePath(obj)\n  }\n}\n\nexport function getUpdatePath(data) {\n  const result = {}\n  dataToPath(data, result)\n  return result\n}\n\nfunction dataToPath(data, result) {\n  Object.keys(data).forEach(key => {\n    result[key] = true\n    const type = Object.prototype.toString.call(data[key])\n    if (type === OBJECTTYPE) {\n      _objToPath(data[key], key, result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(data[key], key, result)\n    }\n  })\n}\n\nfunction _objToPath(data, path, result) {\n  Object.keys(data).forEach(key => {\n    result[path + '.' + key] = true\n    delete result[path]\n    const type = Object.prototype.toString.call(data[key])\n    if (type === OBJECTTYPE) {\n      _objToPath(data[key], path + '.' + key, result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(data[key], path + '.' + key, result)\n    }\n  })\n}\n\nfunction _arrayToPath(data, path, result) {\n  data.forEach((item, index) => {\n    result[path + '[' + index + ']'] = true\n    delete result[path]\n    const type = Object.prototype.toString.call(item)\n    if (type === OBJECTTYPE) {\n      _objToPath(item, path + '[' + index + ']', result)\n    } else if (type === ARRAYTYPE) {\n      _arrayToPath(item, path + '[' + index + ']', result)\n    }\n  })\n}\n","import { cssToDom, nProps, isArray, getUse, hyphenate } from './util'\nimport { diff } from './vdom/diff'\nimport options from './options'\nimport { proxyUpdate } from './observe'\nimport { getPath } from './define'\n\nlet id = 0\n\nexport default class WeElement extends HTMLElement {\n  static is = 'WeElement'\n\n  constructor() {\n    super()\n    this.props = Object.assign(\n      nProps(this.constructor.props),\n      this.constructor.defaultProps\n    )\n    this.elementId = id++\n    this.data = {}\n  }\n\n  connectedCallback() {\n    let p = this.parentNode\n    while (p && !this.store) {\n      this.store = p.store\n      p = p.parentNode || p.host\n    }\n    if (this.store) {\n      this.store.instances.push(this)\n    }\n\n    if (this.initUse) {\n      const use = this.initUse()\n      this._updatePath = getPath(use)\n      this.use = getUse(this.store.data, use)\n    } else {\n      this.constructor.use && (this.use = getUse(this.store.data, this.constructor.use))\n\t\t}\n\t\tthis.attrsToProps()\n    this.beforeInstall()\n    this.install()\n    this.afterInstall()\n\n    let shadowRoot\n    if (!this.shadowRoot) {\n      shadowRoot = this.attachShadow({\n        mode: 'open'\n      })\n    } else {\n      shadowRoot = this.shadowRoot\n      let fc\n      while ((fc = shadowRoot.firstChild)) {\n        shadowRoot.removeChild(fc)\n      }\n    }\n    \n    if (this.constructor.css) {\n      shadowRoot.appendChild(cssToDom(this.constructor.css))\n    } else if (this.css) {\n      shadowRoot.appendChild(cssToDom(typeof this.css === 'function' ? this.css() : this.css))\n    }\n    this.beforeRender()\n    options.afterInstall && options.afterInstall(this)\n    if (this.constructor.observe) {\n      this.beforeObserve()\n      proxyUpdate(this)\n      this.observed()\n    }\n\n    const rendered = this.render(this.props, this.data, this.store)\n    this.__hasChildren = Object.prototype.toString.call(rendered) ==='[object Array]' && rendered.length > 0\n\n    this._host = diff(\n      null,\n      rendered,\n      {},\n      false,\n      null,\n      false\n    )\n    this.rendered()\n\n    if (this.props.css) {\n      this._customStyleElement = cssToDom(this.props.css)\n      this._customStyleContent = this.props.css\n      shadowRoot.appendChild(this._customStyleElement)\n    }\n\n    if (isArray(this._host)) {\n      this._host.forEach(function (item) {\n        shadowRoot.appendChild(item)\n      })\n    } else {\n      shadowRoot.appendChild(this._host)\n    }\n    this.installed()\n    this._isInstalled = true\n  }\n\n  disconnectedCallback() {\n    this.uninstall()\n    this._isInstalled = false\n    if (this.store) {\n      for (let i = 0, len = this.store.instances.length; i < len; i++) {\n        if (this.store.instances[i] === this) {\n          this.store.instances.splice(i, 1)\n          break\n        }\n      }\n    }\n  }\n\n  update() {\n    this._willUpdate = true\n    this.beforeUpdate()\n    this.beforeRender()\n    //fix null !== undefined\n    if (this._customStyleContent != this.props.css) {\n      this._customStyleContent = this.props.css\n      this._customStyleElement.textContent = this._customStyleContent\n    }\n    this.attrsToProps()\n\n    const rendered = this.render(this.props, this.data, this.store)\n    this.__hasChildren = this.__hasChildren || (Object.prototype.toString.call(rendered) ==='[object Array]' && rendered.length > 0)\n\n    this._host = diff(\n      this._host,\n      rendered,\n      null,\n      null,\n      this.shadowRoot\n    )\n    this._willUpdate = false\n    this.updated()\n  }\n\n  removeAttribute(key) {\n    super.removeAttribute(key)\n    //Avoid executing removeAttribute methods before connectedCallback\n    this._isInstalled && this.update()\n  }\n\n  setAttribute(key, val) {\n    if (val && typeof val === 'object') {\n      super.setAttribute(key, JSON.stringify(val))\n    } else {\n      super.setAttribute(key, val)\n    }\n    //Avoid executing setAttribute methods before connectedCallback\n    this._isInstalled && this.update()\n  }\n\n  pureRemoveAttribute(key) {\n    super.removeAttribute(key)\n  }\n\n  pureSetAttribute(key, val) {\n    super.setAttribute(key, val)\n  }\n\n  attrsToProps() {\n    const ele = this\n    if (ele.normalizedNodeName) return\n    ele.props['css'] = ele.getAttribute('css')\n    const attrs = this.constructor.propTypes\n    if(!attrs) return\n    Object.keys(attrs).forEach(key => {\n      const type = attrs[key]\n      const val = ele.getAttribute(hyphenate(key))\n      if (val !== null) {\n        switch (type) {\n          case String:\n            ele.props[key] = val\n            break\n          case Number:\n            ele.props[key] = Number(val)\n            break\n          case Boolean:\n            if (val === 'false' || val === '0') {\n              ele.props[key] = false\n            } else {\n              ele.props[key] = true\n            }\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase Array:\n          case Object:\n            ele.props[key] = JSON.parse(val\n              .replace(/(['\"])?([a-zA-Z0-9_-]+)(['\"])?:([^\\/])/g, '\"$2\":$4')\n              .replace(/'([\\s\\S]*?)'/g, '\"$1\"')\n              .replace(/,(\\s*})/g, '$1')\n              )\n            break\n        }\n      } else {\n        if (ele.constructor.defaultProps && ele.constructor.defaultProps.hasOwnProperty(key)) {\n          ele.props[key] = ele.constructor.defaultProps[key]\n        } else {\n\t\t\t\t\tele.props[key] = null\n\t\t\t\t}\n\t\t\t}\n    })\n  }\n\n  fire(name, data) {\n    this.dispatchEvent(new CustomEvent(name.replace(/-/g, '').toLowerCase(), { detail: data }))\n  }\n\n  beforeInstall() { }\n\n  install() { }\n\n  afterInstall() { }\n\n  installed() { }\n\n  uninstall() { }\n\n  beforeUpdate() { }\n\n  updated() { }\n\n  beforeRender() { }\n\n  rendered() { }\n\n  receiveProps() { }\n\n  beforeObserve() { }\n\n  observed() { }\n}\n","import { diff } from './vdom/diff'\nimport JSONProxy from './proxy'\nimport { getUse } from './util'\n\nexport function render(vnode, parent, store) {\n  parent = typeof parent === 'string' ? document.querySelector(parent) : parent\n  if (store) {\n    store.instances = []\n    extendStoreUpate(store)\n\n    store.data = new JSONProxy(store.data).observe(false, function(patch) {\n\t\t\tconst patchs = {}\n      if (patch.op === 'remove') {\n        // fix arr splice\n        const kv = getArrayPatch(patch.path, store)\n        patchs[kv.k] = kv.v\n\n\t\t\t\tupdate(patchs, store)\n\n      } else {\n        const key = fixPath(patch.path)\n        patchs[key] = patch.value\n\n\t\t\t\tupdate(patchs, store)\n\n      }\n    })\n    parent.store = store\n  }\n  return diff(null, vnode, {}, false, parent, false)\n}\n\nfunction update(patch, store) {\n  store.update(patch)\n}\n\nfunction extendStoreUpate(store) {\n  store.update = function(patch) {\n    const updateAll = matchGlobalData(this.globalData, patch)\n\n    if (Object.keys(patch).length > 0) {\n      this.instances.forEach(instance => {\n        if (\n          updateAll ||\n          this.updateAll ||\n          (instance.constructor.updatePath &&\n            needUpdate(patch, instance.constructor.updatePath)) ||(\n\t\t\t\t\t\t\tinstance._updatePath &&  needUpdate(patch, instance._updatePath))\n        ) {\n\t\t\t\t\t//update this.use\n\t\t\t\t\tif(instance.constructor.use){\n\t\t\t\t\t\tinstance.use = getUse(store.data, instance.constructor.use)\n\t\t\t\t\t} else if(instance.initUse){\n\t\t\t\t\t\tinstance.use = getUse(store.data, instance.initUse())\n\t\t\t\t\t}\n\n          instance.update()\n        }\n      })\n      this.onChange && this.onChange(patch)\n    }\n  }\n}\n\nexport function matchGlobalData(globalData, diffResult) {\n  if (!globalData) return false\n  for (let keyA in diffResult) {\n    if (globalData.indexOf(keyA) > -1) {\n      return true\n    }\n    for (let i = 0, len = globalData.length; i < len; i++) {\n      if (includePath(keyA, globalData[i])) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nexport function needUpdate(diffResult, updatePath) {\n  for (let keyA in diffResult) {\n    if (updatePath[keyA]) {\n      return true\n    }\n    for (let keyB in updatePath) {\n      if (includePath(keyA, keyB)) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nfunction includePath(pathA, pathB) {\n  if (pathA.indexOf(pathB) === 0) {\n    const next = pathA.substr(pathB.length, 1)\n    if (next === '[' || next === '.') {\n      return true\n    }\n  }\n  return false\n}\n\nexport function fixPath(path) {\n  let mpPath = ''\n  const arr = path.replace('/', '').split('/')\n  arr.forEach((item, index) => {\n    if (index) {\n      if (isNaN(Number(item))) {\n        mpPath += '.' + item\n      } else {\n        mpPath += '[' + item + ']'\n      }\n    } else {\n      mpPath += item\n    }\n  })\n  return mpPath\n}\n\nfunction getArrayPatch(path, store) {\n  const arr = path.replace('/', '').split('/')\n  let current = store.data[arr[0]]\n  for (let i = 1, len = arr.length; i < len - 1; i++) {\n    current = current[arr[i]]\n  }\n  return { k: fixArrPath(path), v: current }\n}\n\nfunction fixArrPath(path) {\n  let mpPath = ''\n  const arr = path.replace('/', '').split('/')\n  const len = arr.length\n  arr.forEach((item, index) => {\n    if (index < len - 1) {\n      if (index) {\n        if (isNaN(Number(item))) {\n          mpPath += '.' + item\n        } else {\n          mpPath += '[' + item + ']'\n        }\n      } else {\n        mpPath += item\n      }\n    }\n  })\n  return mpPath\n}\n","import { extend } from './util'\nimport { h } from './h'\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {VNode} vnode\t\tThe virtual DOM element to clone\n * @param {Object} props\tAttributes/props to add when cloning\n * @param {VNode} rest\t\tAny additional arguments will be used as replacement children.\n */\nexport function cloneElement(vnode, props) {\n  return h(\n    vnode.nodeName,\n    extend(extend({}, vnode.attributes), props),\n    arguments.length > 2 ? [].slice.call(arguments, 2) : vnode.children\n  )\n}\n","export function getHost(ele) {\n  let p = ele.parentNode\n  while (p) {\n    if (p.host) {\n      return p.host\n    } else if (p.shadowRoot && p.shadowRoot.host) {\n      return p.shadowRoot.host\n    } else {\n      p = p.parentNode\n    }\n  }\n}\n","export function rpx(str) {\n  return str.replace(/([1-9]\\d*|0)(\\.\\d*)*rpx/g, (a, b) => {\n    return (window.innerWidth * Number(b)) / 750 + 'px'\n  })\n}\n","/**\n * classNames based on https://github.com/JedWatson/classnames\n * by Jed Watson\n * Licensed under the MIT License\n * https://github.com/JedWatson/classnames/blob/master/LICENSE\n * modified by dntzhang\n */\n\nvar hasOwn = {}.hasOwnProperty\n\nexport function classNames() {\n  var classes = []\n\n  for (var i = 0; i < arguments.length; i++) {\n    var arg = arguments[i]\n    if (!arg) continue\n\n    var argType = typeof arg\n\n    if (argType === 'string' || argType === 'number') {\n      classes.push(arg)\n    } else if (Array.isArray(arg) && arg.length) {\n      var inner = classNames.apply(null, arg)\n      if (inner) {\n        classes.push(inner)\n      }\n    } else if (argType === 'object') {\n      for (var key in arg) {\n        if (hasOwn.call(arg, key) && arg[key]) {\n          classes.push(key)\n        }\n      }\n    }\n  }\n\n  return classes.join(' ')\n}\n\nexport function extractClass() {\n  const [props, ...args] = Array.prototype.slice.call(arguments, 0)\n  if (props.class) {\n    args.unshift(props.class)\n    delete props.class\n  } else if (props.className) {\n    args.unshift(props.className)\n    delete props.className\n  }\n  if (args.length > 0) {\n    return { class: classNames.apply(null, args) }\n  }\n}\n","export function o(obj){\n  return JSON.stringify(obj)\n}","function getGlobal() {\n  if (\n    typeof global !== 'object' ||\n    !global ||\n    global.Math !== Math ||\n    global.Array !== Array\n  ) {\n    return (\n      self ||\n      window ||\n      global ||\n      (function() {\n        return this\n      })()\n    )\n  }\n  return global\n}\n\n/** Global options\n *\t@public\n *\t@namespace options {Object}\n */\nexport default {\n  store: null,\n  root: getGlobal(),\n  mapping: {}\n}\n","/*!\n * https://github.com/Palindrom/JSONPatcherProxy\n * (c) 2017 Starcounter\n * MIT license\n */\n\n/** Class representing a JS Object observer  */\nconst JSONPatcherProxy = (function() {\n  /**\n   * Deep clones your object and returns a new object.\n   */\n  function deepClone(obj) {\n    switch (typeof obj) {\n    case 'object':\n      return JSON.parse(JSON.stringify(obj)) //Faster than ES5 clone - http://jsperf.com/deep-cloning-of-objects/5\n    case 'undefined':\n      return null //this is how JSON.stringify behaves for array items\n    default:\n      return obj //no need to clone primitives\n    }\n  }\n  JSONPatcherProxy.deepClone = deepClone\n\n  function escapePathComponent(str) {\n    if (str.indexOf('/') == -1 && str.indexOf('~') == -1) return str\n    return str.replace(/~/g, '~0').replace(/\\//g, '~1')\n  }\n  JSONPatcherProxy.escapePathComponent = escapePathComponent\n\n  /**\n   * Walk up the parenthood tree to get the path\n   * @param {JSONPatcherProxy} instance\n   * @param {Object} obj the object you need to find its path\n   */\n  function findObjectPath(instance, obj) {\n    const pathComponents = []\n    let parentAndPath = instance.parenthoodMap.get(obj)\n    while (parentAndPath && parentAndPath.path) {\n      // because we're walking up-tree, we need to use the array as a stack\n      pathComponents.unshift(parentAndPath.path)\n      parentAndPath = instance.parenthoodMap.get(parentAndPath.parent)\n    }\n    if (pathComponents.length) {\n      const path = pathComponents.join('/')\n      return '/' + path\n    }\n    return ''\n  }\n  /**\n   * A callback to be used as th proxy set trap callback.\n   * It updates parenthood map if needed, proxifies nested newly-added objects, calls default callbacks with the changes occurred.\n   * @param {JSONPatcherProxy} instance JSONPatcherProxy instance\n   * @param {Object} target the affected object\n   * @param {String} key the effect property's name\n   * @param {Any} newValue the value being set\n   */\n  function setTrap(instance, target, key, newValue) {\n    const parentPath = findObjectPath(instance, target)\n\n    const destinationPropKey = parentPath + '/' + escapePathComponent(key)\n\n    if (instance.proxifiedObjectsMap.has(newValue)) {\n      const newValueOriginalObject = instance.proxifiedObjectsMap.get(newValue)\n\n      instance.parenthoodMap.set(newValueOriginalObject.originalObject, {\n        parent: target,\n        path: key\n      })\n    }\n    /*\n        mark already proxified values as inherited.\n        rationale: proxy.arr.shift()\n        will emit\n        {op: replace, path: '/arr/1', value: arr_2}\n        {op: remove, path: '/arr/2'}\n\n        by default, the second operation would revoke the proxy, and this renders arr revoked.\n        That's why we need to remember the proxies that are inherited.\n      */\n    const revokableInstance = instance.proxifiedObjectsMap.get(newValue)\n    /*\n    Why do we need to check instance.isProxifyingTreeNow?\n\n    We need to make sure we mark revokables as inherited ONLY when we're observing,\n    because throughout the first proxification, a sub-object is proxified and then assigned to\n    its parent object. This assignment of a pre-proxified object can fool us into thinking\n    that it's a proxified object moved around, while in fact it's the first assignment ever.\n\n    Checking isProxifyingTreeNow ensures this is not happening in the first proxification,\n    but in fact is is a proxified object moved around the tree\n    */\n    if (revokableInstance && !instance.isProxifyingTreeNow) {\n      revokableInstance.inherited = true\n    }\n\n    // if the new value is an object, make sure to watch it\n    if (\n      newValue &&\n      typeof newValue == 'object' &&\n      !instance.proxifiedObjectsMap.has(newValue)\n    ) {\n      instance.parenthoodMap.set(newValue, {\n        parent: target,\n        path: key\n      })\n      newValue = instance._proxifyObjectTreeRecursively(target, newValue, key)\n    }\n    // let's start with this operation, and may or may not update it later\n    const operation = {\n      op: 'remove',\n      path: destinationPropKey\n    }\n    if (typeof newValue == 'undefined') {\n      // applying De Morgan's laws would be a tad faster, but less readable\n      if (!Array.isArray(target) && !target.hasOwnProperty(key)) {\n        // `undefined` is being set to an already undefined value, keep silent\n        return Reflect.set(target, key, newValue)\n      }\n      // when array element is set to `undefined`, should generate replace to `null`\n      if (Array.isArray(target)) {\n        // undefined array elements are JSON.stringified to `null`\n        ;(operation.op = 'replace'), (operation.value = null)\n      }\n      const oldValue = instance.proxifiedObjectsMap.get(target[key])\n      // was the deleted a proxified object?\n      if (oldValue) {\n        instance.parenthoodMap.delete(target[key])\n        instance.disableTrapsForProxy(oldValue)\n        instance.proxifiedObjectsMap.delete(oldValue)\n      }\n    } else {\n      if (Array.isArray(target) && !Number.isInteger(+key.toString())) {\n        /* array props (as opposed to indices) don't emit any patches, to avoid needless `length` patches */\n        if (key != 'length') {\n          console.warn(\n            'JSONPatcherProxy noticed a non-integer prop was set for an array. This will not emit a patch'\n          )\n        }\n        return Reflect.set(target, key, newValue)\n      }\n      operation.op = 'add'\n      if (target.hasOwnProperty(key)) {\n        if (typeof target[key] !== 'undefined' || Array.isArray(target)) {\n          operation.op = 'replace' // setting `undefined` array elements is a `replace` op\n        }\n      }\n      operation.value = newValue\n    }\n    operation.oldValue = target[key]\n    const reflectionResult = Reflect.set(target, key, newValue)\n    instance.defaultCallback(operation)\n    return reflectionResult\n  }\n  /**\n   * A callback to be used as th proxy delete trap callback.\n   * It updates parenthood map if needed, calls default callbacks with the changes occurred.\n   * @param {JSONPatcherProxy} instance JSONPatcherProxy instance\n   * @param {Object} target the effected object\n   * @param {String} key the effected property's name\n   */\n  function deleteTrap(instance, target, key) {\n    if (typeof target[key] !== 'undefined') {\n      const parentPath = findObjectPath(instance, target)\n      const destinationPropKey = parentPath + '/' + escapePathComponent(key)\n\n      const revokableProxyInstance = instance.proxifiedObjectsMap.get(\n        target[key]\n      )\n\n      if (revokableProxyInstance) {\n        if (revokableProxyInstance.inherited) {\n          /*\n            this is an inherited proxy (an already proxified object that was moved around),\n            we shouldn't revoke it, because even though it was removed from path1, it is still used in path2.\n            And we know that because we mark moved proxies with `inherited` flag when we move them\n\n            it is a good idea to remove this flag if we come across it here, in deleteProperty trap.\n            We DO want to revoke the proxy if it was removed again.\n          */\n          revokableProxyInstance.inherited = false\n        } else {\n          instance.parenthoodMap.delete(revokableProxyInstance.originalObject)\n          instance.disableTrapsForProxy(revokableProxyInstance)\n          instance.proxifiedObjectsMap.delete(target[key])\n        }\n      }\n      const reflectionResult = Reflect.deleteProperty(target, key)\n\n      instance.defaultCallback({\n        op: 'remove',\n        path: destinationPropKey\n      })\n\n      return reflectionResult\n    }\n  }\n  /* pre-define resume and pause functions to enhance constructors performance */\n  function resume() {\n    this.defaultCallback = operation => {\n      this.isRecording && this.patches.push(operation)\n      this.userCallback && this.userCallback(operation)\n    }\n    this.isObserving = true\n  }\n  function pause() {\n    this.defaultCallback = () => {}\n    this.isObserving = false\n  }\n  /**\n   * Creates an instance of JSONPatcherProxy around your object of interest `root`.\n   * @param {Object|Array} root - the object you want to wrap\n   * @param {Boolean} [showDetachedWarning = true] - whether to log a warning when a detached sub-object is modified @see {@link https://github.com/Palindrom/JSONPatcherProxy#detached-objects}\n   * @returns {JSONPatcherProxy}\n   * @constructor\n   */\n  function JSONPatcherProxy(root, showDetachedWarning) {\n    this.isProxifyingTreeNow = false\n    this.isObserving = false\n    this.proxifiedObjectsMap = new Map()\n    this.parenthoodMap = new Map()\n    // default to true\n    if (typeof showDetachedWarning !== 'boolean') {\n      showDetachedWarning = true\n    }\n\n    this.showDetachedWarning = showDetachedWarning\n    this.originalObject = root\n    this.cachedProxy = null\n    this.isRecording = false\n    this.userCallback\n    /**\n     * @memberof JSONPatcherProxy\n     * Restores callback back to the original one provided to `observe`.\n     */\n    this.resume = resume.bind(this)\n    /**\n     * @memberof JSONPatcherProxy\n     * Replaces your callback with a noop function.\n     */\n    this.pause = pause.bind(this)\n  }\n\n  JSONPatcherProxy.prototype.generateProxyAtPath = function(parent, obj, path) {\n    if (!obj) {\n      return obj\n    }\n    const traps = {\n      set: (target, key, value, receiver) =>\n        setTrap(this, target, key, value, receiver),\n      deleteProperty: (target, key) => deleteTrap(this, target, key)\n    }\n    const revocableInstance = Proxy.revocable(obj, traps)\n    // cache traps object to disable them later.\n    revocableInstance.trapsInstance = traps\n    revocableInstance.originalObject = obj\n\n    /* keeping track of object's parent and path */\n\n    this.parenthoodMap.set(obj, { parent, path })\n\n    /* keeping track of all the proxies to be able to revoke them later */\n    this.proxifiedObjectsMap.set(revocableInstance.proxy, revocableInstance)\n    return revocableInstance.proxy\n  }\n  // grab tree's leaves one by one, encapsulate them into a proxy and return\n  JSONPatcherProxy.prototype._proxifyObjectTreeRecursively = function(\n    parent,\n    root,\n    path\n  ) {\n    for (let key in root) {\n      if (root.hasOwnProperty(key)) {\n        if (root[key] instanceof Object) {\n          root[key] = this._proxifyObjectTreeRecursively(\n            root,\n            root[key],\n            escapePathComponent(key)\n          )\n        }\n      }\n    }\n    return this.generateProxyAtPath(parent, root, path)\n  }\n  // this function is for aesthetic purposes\n  JSONPatcherProxy.prototype.proxifyObjectTree = function(root) {\n    /*\n    while proxyifying object tree,\n    the proxyifying operation itself is being\n    recorded, which in an unwanted behavior,\n    that's why we disable recording through this\n    initial process;\n    */\n    this.pause()\n    this.isProxifyingTreeNow = true\n    const proxifiedObject = this._proxifyObjectTreeRecursively(\n      undefined,\n      root,\n      ''\n    )\n    /* OK you can record now */\n    this.isProxifyingTreeNow = false\n    this.resume()\n    return proxifiedObject\n  }\n  /**\n   * Turns a proxified object into a forward-proxy object; doesn't emit any patches anymore, like a normal object\n   * @param {Proxy} proxy - The target proxy object\n   */\n  JSONPatcherProxy.prototype.disableTrapsForProxy = function(\n    revokableProxyInstance\n  ) {\n    if (this.showDetachedWarning) {\n      const message =\n        \"You're accessing an object that is detached from the observedObject tree, see https://github.com/Palindrom/JSONPatcherProxy#detached-objects\"\n\n      revokableProxyInstance.trapsInstance.set = (\n        targetObject,\n        propKey,\n        newValue\n      ) => {\n        console.warn(message)\n        return Reflect.set(targetObject, propKey, newValue)\n      }\n      revokableProxyInstance.trapsInstance.set = (\n        targetObject,\n        propKey,\n        newValue\n      ) => {\n        console.warn(message)\n        return Reflect.set(targetObject, propKey, newValue)\n      }\n      revokableProxyInstance.trapsInstance.deleteProperty = (\n        targetObject,\n        propKey\n      ) => {\n        return Reflect.deleteProperty(targetObject, propKey)\n      }\n    } else {\n      delete revokableProxyInstance.trapsInstance.set\n      delete revokableProxyInstance.trapsInstance.get\n      delete revokableProxyInstance.trapsInstance.deleteProperty\n    }\n  }\n  /**\n   * Proxifies the object that was passed in the constructor and returns a proxified mirror of it. Even though both parameters are options. You need to pass at least one of them.\n   * @param {Boolean} [record] - whether to record object changes to a later-retrievable patches array.\n   * @param {Function} [callback] - this will be synchronously called with every object change with a single `patch` as the only parameter.\n   */\n  JSONPatcherProxy.prototype.observe = function(record, callback) {\n    if (!record && !callback) {\n      throw new Error('You need to either record changes or pass a callback')\n    }\n    this.isRecording = record\n    this.userCallback = callback\n    /*\n    I moved it here to remove it from `unobserve`,\n    this will also make the constructor faster, why initiate\n    the array before they decide to actually observe with recording?\n    They might need to use only a callback.\n    */\n    if (record) this.patches = []\n    this.cachedProxy = this.proxifyObjectTree(this.originalObject)\n    return this.cachedProxy\n  }\n  /**\n   * If the observed is set to record, it will synchronously return all the patches and empties patches array.\n   */\n  JSONPatcherProxy.prototype.generate = function() {\n    if (!this.isRecording) {\n      throw new Error('You should set record to true to get patches later')\n    }\n    return this.patches.splice(0, this.patches.length)\n  }\n  /**\n   * Revokes all proxies rendering the observed object useless and good for garbage collection @see {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy/revocable}\n   */\n  JSONPatcherProxy.prototype.revoke = function() {\n    this.proxifiedObjectsMap.forEach(el => {\n      el.revoke()\n    })\n  }\n  /**\n   * Disables all proxies' traps, turning the observed object into a forward-proxy object, like a normal object that you can modify silently.\n   */\n  JSONPatcherProxy.prototype.disableTraps = function() {\n    this.proxifiedObjectsMap.forEach(this.disableTrapsForProxy, this)\n  }\n  return JSONPatcherProxy\n})()\n\nexport default JSONPatcherProxy\n","import WeElement from './we-element'\n\nexport default class ModelView extends WeElement {\n  static observe = true\n\n  static mergeUpdate = false\n\n  beforeInstall() {\n    this.data = this.vm.data\n  }\n\n  observed() {\n    this.vm.data = this.data\n  }\n}\n","import { h, h as createElement } from './h'\nimport options from './options'\nimport WeElement from './we-element'\nimport { render } from './render'\nimport { define } from './define'\nimport { tag } from './tag'\nimport { observe } from './observe'\nimport { cloneElement } from './clone-element'\nimport { getHost } from './get-host'\nimport { rpx } from './rpx'\nimport { tick, nextTick } from './tick'\nimport ModelView from './model-view'\nimport { classNames, extractClass } from './class'\nimport { o } from './o'\nimport htm from 'htm'\n\nconst html = htm.bind(h)\n\nfunction createRef() {\n  return {}\n}\n\nconst Component = WeElement\nconst defineElement = define\nconst elements = options.mapping\n\nconst omi = {\n  tag,\n  WeElement,\n  Component,\n  render,\n  h,\n  createElement,\n  options,\n  define,\n  observe,\n  cloneElement,\n  getHost,\n  rpx,\n  tick,\n  nextTick,\n  ModelView,\n  defineElement,\n  classNames,\n  extractClass,\n  createRef,\n  html,\n  htm,\n  o,\n  elements\n}\n\noptions.root.Omi = omi\noptions.root.omi = omi\noptions.root.Omi.version = '6.6.2'\n\nexport default omi\n\nexport {\n  tag,\n  WeElement,\n  Component,\n  render,\n  h,\n  createElement,\n  options,\n  define,\n  observe,\n  cloneElement,\n  getHost,\n  rpx,\n  tick,\n  nextTick,\n  ModelView,\n  defineElement,\n  classNames,\n  extractClass,\n  createRef,\n  html,\n  htm,\n  o,\n  elements\n}\n"]}